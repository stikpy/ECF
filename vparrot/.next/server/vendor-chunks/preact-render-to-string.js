/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact-render-to-string";
exports.ids = ["vendor-chunks/preact-render-to-string"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact-render-to-string/dist/commonjs.js":
/*!***************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/commonjs.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("!function(e, t) {\n     true ? t(exports, __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\")) : 0;\n}(this, function(e, t) {\n    var r = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i, n = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/, o = /[\\s\\n\\\\/='\"\\0<>]/, i = /^xlink:?./, s = /[\"&<]/;\n    function a(e) {\n        if (!1 === s.test(e += \"\")) return e;\n        for(var t = 0, r = 0, n = \"\", o = \"\"; r < e.length; r++){\n            switch(e.charCodeAt(r)){\n                case 34:\n                    o = \"&quot;\";\n                    break;\n                case 38:\n                    o = \"&amp;\";\n                    break;\n                case 60:\n                    o = \"&lt;\";\n                    break;\n                default:\n                    continue;\n            }\n            r !== t && (n += e.slice(t, r)), n += o, t = r + 1;\n        }\n        return r !== t && (n += e.slice(t, r)), n;\n    }\n    var l = function(e, t) {\n        return String(e).replace(/(\\n+)/g, \"$1\" + (t || \"\t\"));\n    }, f = function(e, t, r) {\n        return String(e).length > (t || 40) || !r && -1 !== String(e).indexOf(\"\\n\") || -1 !== String(e).indexOf(\"<\");\n    }, c = {}, u = /([A-Z])/g;\n    function p(e) {\n        var t = \"\";\n        for(var n in e){\n            var o = e[n];\n            null != o && \"\" !== o && (t && (t += \" \"), t += \"-\" == n[0] ? n : c[n] || (c[n] = n.replace(u, \"-$1\").toLowerCase()), t = \"number\" == typeof o && !1 === r.test(n) ? t + \": \" + o + \"px;\" : t + \": \" + o + \";\");\n        }\n        return t || void 0;\n    }\n    function d(e, t) {\n        return Array.isArray(t) ? t.reduce(d, e) : null != t && !1 !== t && e.push(t), e;\n    }\n    function _() {\n        this.__d = !0;\n    }\n    function v(e, t) {\n        return {\n            __v: e,\n            context: t,\n            props: e.props,\n            setState: _,\n            forceUpdate: _,\n            __d: !0,\n            __h: []\n        };\n    }\n    function g(e, t) {\n        var r = e.contextType, n = r && t[r.__c];\n        return null != r ? n ? n.props.value : r.__ : t;\n    }\n    var h = [];\n    function y(e, r, s, c, u, _) {\n        if (null == e || \"boolean\" == typeof e) return \"\";\n        if (\"object\" != typeof e) return a(e);\n        var m = s.pretty, b = m && \"string\" == typeof m ? m : \"\t\";\n        if (Array.isArray(e)) {\n            for(var x = \"\", S = 0; S < e.length; S++)m && S > 0 && (x += \"\\n\"), x += y(e[S], r, s, c, u, _);\n            return x;\n        }\n        var k, w = e.type, C = e.props, O = !1;\n        if (\"function\" == typeof w) {\n            if (O = !0, !s.shallow || !c && !1 !== s.renderRootComponent) {\n                if (w === t.Fragment) {\n                    var j = [];\n                    return d(j, e.props.children), y(j, r, s, !1 !== s.shallowHighOrder, u, _);\n                }\n                var A, F = e.__c = v(e, r);\n                t.options.__b && t.options.__b(e);\n                var T = t.options.__r;\n                if (w.prototype && \"function\" == typeof w.prototype.render) {\n                    var H = g(w, r);\n                    (F = e.__c = new w(C, H)).__v = e, F._dirty = F.__d = !0, F.props = C, null == F.state && (F.state = {}), null == F._nextState && null == F.__s && (F._nextState = F.__s = F.state), F.context = H, w.getDerivedStateFromProps ? F.state = Object.assign({}, F.state, w.getDerivedStateFromProps(F.props, F.state)) : F.componentWillMount && (F.componentWillMount(), F.state = F._nextState !== F.state ? F._nextState : F.__s !== F.state ? F.__s : F.state), T && T(e), A = F.render(F.props, F.state, F.context);\n                } else for(var M = g(w, r), L = 0; F.__d && L++ < 25;)F.__d = !1, T && T(e), A = w.call(e.__c, C, M);\n                return F.getChildContext && (r = Object.assign({}, r, F.getChildContext())), t.options.diffed && t.options.diffed(e), y(A, r, s, !1 !== s.shallowHighOrder, u, _);\n            }\n            w = (k = w).displayName || k !== Function && k.name || function(e) {\n                var t = (Function.prototype.toString.call(e).match(/^\\s*function\\s+([^( ]+)/) || \"\")[1];\n                if (!t) {\n                    for(var r = -1, n = h.length; n--;)if (h[n] === e) {\n                        r = n;\n                        break;\n                    }\n                    r < 0 && (r = h.push(e) - 1), t = \"UnnamedComponent\" + r;\n                }\n                return t;\n            }(k);\n        }\n        var E, $, D = \"<\" + w;\n        if (C) {\n            var N = Object.keys(C);\n            s && !0 === s.sortAttributes && N.sort();\n            for(var P = 0; P < N.length; P++){\n                var R = N[P], W = C[R];\n                if (\"children\" !== R) {\n                    if (!o.test(R) && (s && s.allAttributes || \"key\" !== R && \"ref\" !== R && \"__self\" !== R && \"__source\" !== R)) {\n                        if (\"defaultValue\" === R) R = \"value\";\n                        else if (\"defaultChecked\" === R) R = \"checked\";\n                        else if (\"defaultSelected\" === R) R = \"selected\";\n                        else if (\"className\" === R) {\n                            if (void 0 !== C.class) continue;\n                            R = \"class\";\n                        } else u && i.test(R) && (R = R.toLowerCase().replace(/^xlink:?/, \"xlink:\"));\n                        if (\"htmlFor\" === R) {\n                            if (C.for) continue;\n                            R = \"for\";\n                        }\n                        \"style\" === R && W && \"object\" == typeof W && (W = p(W)), \"a\" === R[0] && \"r\" === R[1] && \"boolean\" == typeof W && (W = String(W));\n                        var q = s.attributeHook && s.attributeHook(R, W, r, s, O);\n                        if (q || \"\" === q) D += q;\n                        else if (\"dangerouslySetInnerHTML\" === R) $ = W && W.__html;\n                        else if (\"textarea\" === w && \"value\" === R) E = W;\n                        else if ((W || 0 === W || \"\" === W) && \"function\" != typeof W) {\n                            if (!(!0 !== W && \"\" !== W || (W = R, s && s.xml))) {\n                                D = D + \" \" + R;\n                                continue;\n                            }\n                            if (\"value\" === R) {\n                                if (\"select\" === w) {\n                                    _ = W;\n                                    continue;\n                                }\n                                \"option\" === w && _ == W && void 0 === C.selected && (D += \" selected\");\n                            }\n                            D = D + \" \" + R + '=\"' + a(W) + '\"';\n                        }\n                    }\n                } else E = W;\n            }\n        }\n        if (m) {\n            var I = D.replace(/\\n\\s*/, \" \");\n            I === D || ~I.indexOf(\"\\n\") ? m && ~D.indexOf(\"\\n\") && (D += \"\\n\") : D = I;\n        }\n        if (D += \">\", o.test(w)) throw new Error(w + \" is not a valid HTML tag name in \" + D);\n        var U, V = n.test(w) || s.voidElements && s.voidElements.test(w), z = [];\n        if ($) m && f($) && ($ = \"\\n\" + b + l($, b)), D += $;\n        else if (null != E && d(U = [], E).length) {\n            for(var Z = m && ~D.indexOf(\"\\n\"), B = !1, G = 0; G < U.length; G++){\n                var J = U[G];\n                if (null != J && !1 !== J) {\n                    var K = y(J, r, s, !0, \"svg\" === w || \"foreignObject\" !== w && u, _);\n                    if (m && !Z && f(K) && (Z = !0), K) if (m) {\n                        var Q = K.length > 0 && \"<\" != K[0];\n                        B && Q ? z[z.length - 1] += K : z.push(K), B = Q;\n                    } else z.push(K);\n                }\n            }\n            if (m && Z) for(var X = z.length; X--;)z[X] = \"\\n\" + b + l(z[X], b);\n        }\n        if (z.length || $) D += z.join(\"\");\n        else if (s && s.xml) return D.substring(0, D.length - 1) + \" />\";\n        return !V || U || $ ? (m && ~D.indexOf(\"\\n\") && (D += \"\\n\"), D = D + \"</\" + w + \">\") : D = D.replace(/>$/, \" />\"), D;\n    }\n    var m = {\n        shallow: !0\n    };\n    S.render = S;\n    var b = function(e, t) {\n        return S(e, t, m);\n    }, x = [];\n    function S(e, r, n) {\n        r = r || {};\n        var o, i = t.options.__s;\n        return t.options.__s = !0, o = n && (n.pretty || n.voidElements || n.sortAttributes || n.shallow || n.allAttributes || n.xml || n.attributeHook) ? y(e, r, n) : j(e, r, !1, void 0), t.options.__c && t.options.__c(e, x), t.options.__s = i, x.length = 0, o;\n    }\n    function k(e, t) {\n        return \"className\" === e ? \"class\" : \"htmlFor\" === e ? \"for\" : \"defaultValue\" === e ? \"value\" : \"defaultChecked\" === e ? \"checked\" : \"defaultSelected\" === e ? \"selected\" : t && i.test(e) ? e.toLowerCase().replace(/^xlink:?/, \"xlink:\") : e;\n    }\n    function w(e, t) {\n        return \"style\" === e && null != t && \"object\" == typeof t ? p(t) : \"a\" === e[0] && \"r\" === e[1] && \"boolean\" == typeof t ? String(t) : t;\n    }\n    var C = Array.isArray, O = Object.assign;\n    function j(e, r, i, s) {\n        if (null == e || !0 === e || !1 === e || \"\" === e) return \"\";\n        if (\"object\" != typeof e) return a(e);\n        if (C(e)) {\n            for(var l = \"\", f = 0; f < e.length; f++)l += j(e[f], r, i, s);\n            return l;\n        }\n        t.options.__b && t.options.__b(e);\n        var c = e.type, u = e.props;\n        if (\"function\" == typeof c) {\n            if (c === t.Fragment) return j(e.props.children, r, i, s);\n            var p;\n            p = c.prototype && \"function\" == typeof c.prototype.render ? function(e, r) {\n                var n = e.type, o = g(n, r), i = new n(e.props, o);\n                e.__c = i, i.__v = e, i.__d = !0, i.props = e.props, null == i.state && (i.state = {}), null == i.__s && (i.__s = i.state), i.context = o, n.getDerivedStateFromProps ? i.state = O({}, i.state, n.getDerivedStateFromProps(i.props, i.state)) : i.componentWillMount && (i.componentWillMount(), i.state = i.__s !== i.state ? i.__s : i.state);\n                var s = t.options.__r;\n                return s && s(e), i.render(i.props, i.state, i.context);\n            }(e, r) : function(e, r) {\n                var n, o = v(e, r), i = g(e.type, r);\n                e.__c = o;\n                for(var s = t.options.__r, a = 0; o.__d && a++ < 25;)o.__d = !1, s && s(e), n = e.type.call(o, e.props, i);\n                return n;\n            }(e, r);\n            var d = e.__c;\n            d.getChildContext && (r = O({}, r, d.getChildContext()));\n            var _ = j(p, r, i, s);\n            return t.options.diffed && t.options.diffed(e), _;\n        }\n        var h, y, m = \"<\";\n        if (m += c, u) for(var b in h = u.children, u){\n            var x = u[b];\n            if (!(\"key\" === b || \"ref\" === b || \"__self\" === b || \"__source\" === b || \"children\" === b || \"className\" === b && \"class\" in u || \"htmlFor\" === b && \"for\" in u || o.test(b))) {\n                if (x = w(b = k(b, i), x), \"dangerouslySetInnerHTML\" === b) y = x && x.__html;\n                else if (\"textarea\" === c && \"value\" === b) h = x;\n                else if ((x || 0 === x || \"\" === x) && \"function\" != typeof x) {\n                    if (!0 === x || \"\" === x) {\n                        x = b, m = m + \" \" + b;\n                        continue;\n                    }\n                    if (\"value\" === b) {\n                        if (\"select\" === c) {\n                            s = x;\n                            continue;\n                        }\n                        \"option\" !== c || s != x || \"selected\" in u || (m += \" selected\");\n                    }\n                    m = m + \" \" + b + '=\"' + a(x) + '\"';\n                }\n            }\n        }\n        var S = m;\n        if (m += \">\", o.test(c)) throw new Error(c + \" is not a valid HTML tag name in \" + m);\n        var A = \"\", F = !1;\n        if (y) A += y, F = !0;\n        else if (\"string\" == typeof h) A += a(h), F = !0;\n        else if (C(h)) for(var T = 0; T < h.length; T++){\n            var H = h[T];\n            if (null != H && !1 !== H) {\n                var M = j(H, r, \"svg\" === c || \"foreignObject\" !== c && i, s);\n                M && (A += M, F = !0);\n            }\n        }\n        else if (null != h && !1 !== h && !0 !== h) {\n            var L = j(h, r, \"svg\" === c || \"foreignObject\" !== c && i, s);\n            L && (A += L, F = !0);\n        }\n        if (t.options.diffed && t.options.diffed(e), F) m += A;\n        else if (n.test(c)) return S + \" />\";\n        return m + \"</\" + c + \">\";\n    }\n    S.shallowRender = b, e.default = S, e.render = S, e.renderToStaticMarkup = S, e.renderToString = S, e.shallowRender = b;\n}); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact-render-to-string/dist/commonjs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/preact-render-to-string/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./commonjs */ \"(rsc)/./node_modules/preact-render-to-string/dist/commonjs.js\")[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcHJlYWN0LXJlbmRlci10by1zdHJpbmcvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLGtJQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcmVhY3QtcmVuZGVyLXRvLXN0cmluZy9kaXN0L2luZGV4LmpzP2JjODciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2NvbW1vbmpzJykuZGVmYXVsdDsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact-render-to-string/dist/index.js\n");

/***/ })

};
;