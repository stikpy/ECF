generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  users         users     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model testimonials {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  date        DateTime? @default(now()) @db.Timestamp(6)
  rating      Int?
  message     String?   @db.VarChar(255)
  status      String?   @default("hors ligne") @db.VarChar(20)
  isValidated Boolean?  @default(false)
}

model carPosts {
  id          Int          @id @default(autoincrement())
  title       String?      @db.VarChar(255)
  description String?
  price       Int?
  imageUrl    String?      @db.VarChar(255)
  km          Int?
  year        Int?
  createdat   DateTime?    @default(now()) @db.Timestamp(6)
  updatedat   DateTime?    @default(now()) @db.Timestamp(6)
  status      String?      @default("hors ligne") @db.VarChar(20)
  userId      Int
  users         users     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id        Int        @id @default(autoincrement())
  email     String?    @unique @db.VarChar(255)
  password  String?    @db.VarChar(255)
  firstname String?    @db.VarChar(255)
  lastname  String?    @db.VarChar(255)
  role      String?    @db.VarChar(50)
  account   Account[]
  carPosts  carPosts[]
  session   Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model OpeningHours {
  id       Int      @id @default(autoincrement())
  day      String  
  timeSlots String[] 
}

model TextContent {
  id       Int      @id @default(autoincrement())
  slug     String   @unique
  title    String
  content  String
}
